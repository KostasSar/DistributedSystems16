package servlets;

import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.Cookie;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;

/**
 * Servlet implementation class LoginServlet
 */
@WebServlet("/LoginServlet")
public class LoginServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse
	 *      response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response)
			throws ServletException, IOException {
		String user = request.getParameter("uname");
		String pwd = request.getParameter("upsw");
		int error = 1;

		// Create new connection object
		Connection con = (Connection) getServletContext().getAttribute("DBConnection");
		PreparedStatement ps = null;
		ResultSet rs = null;

		try {
			if (user.charAt(1) == 'a') {
				// Check database if administrator has provided correct login
				// information
				ps = con.prepareStatement("SELECT Password,Id FROM MECHANIC WHERE Password=? and Id=?");
				ps.setString(1, pwd);
				ps.setString(2, user);
				rs = ps.executeQuery();

				if (rs != null && rs.next()) {

					// Create a new session
					HttpSession session = request.getSession();

					// After 30 minutes of inactivity the session ends.
					session.setMaxInactiveInterval(60 * 30);

					// A cookie is created containing the user's status
					Cookie userType = new Cookie("userType", "Administrator");
					response.addCookie(userType);
					userType.setMaxAge(60 * 60 * 24);
					error = 0;
				}

			} else if (user.charAt(1) == 'e') {
				// Check database if employee has provided correct login
				// information
				ps = con.prepareStatement("SELECT Password,Id FROM EMPLOYEE WHERE Password=? and Id=?");
				ps.setString(1, pwd);
				ps.setString(2, user);
				rs = ps.executeQuery();

				if (rs != null && rs.next()) {

					// Create a new session
					HttpSession session = request.getSession();

					// After 30 minutes of inactivity the session ends.
					session.setMaxInactiveInterval(60 * 30);

					// A cookie is created containing the user's status
					Cookie userType = new Cookie("userType", "Employee");
					response.addCookie(userType);
					userType.setMaxAge(60 * 60 * 24);
					error = 0;

				}
			}
		} catch (SQLException e) {
			e.printStackTrace();
		}
		if (error != 1) {

			// A cookie is created containing the user's department
			String userDept = Character.toString(user.charAt(0));
			Cookie userDepartment = new Cookie("userDepartment", userDept);
			response.addCookie(userDepartment);
			// Setting cookie to expire in 30 minutes
			userDepartment.setMaxAge(60 * 60 * 24);

			// A cookie is created containing the username
			Cookie userName = new Cookie("userName", user);
			userName.setMaxAge(30 * 60);
			response.addCookie(userName);
			// Setting cookie to expire in 30 minutes
			userName.setMaxAge(60 * 60 * 24);

			// Requests info stored in cookies to redirect the user to the
			// appropriate page
			Cookie[] cookies = request.getCookies();

			if (cookies != null) {
				for (Cookie cookie : cookies) {
					if (cookie.getName().equals("userType")) {

						String type = cookie.getValue();
						if (type.equals("Employee")) {

							RequestDispatcher rd = getServletContext()
									.getRequestDispatcher("/CustomerRegistration.html");
							PrintWriter out = response.getWriter();
							out.println("<html><body>");
							out.println("<h1>Welcome " + user + "</h1>");
							out.println("</body></html>");
							rd.include(request, response);

						} else if (type.equals("Administrator")) {
							RequestDispatcher rd = getServletContext().getRequestDispatcher("/AdminActions.html");
							PrintWriter out = response.getWriter();
							out.println("<html><body>");
							out.println("<h1>Welcome " + user + "</h1>");
							out.println("</body></html>");
							rd.include(request, response);
						}

					}
				}

			}
		} else if (error == 1) {
			// In case of an invalid login user is redirected to the login
			// page
			RequestDispatcher rd = getServletContext().getRequestDispatcher("/Login.html");
			PrintWriter out = response.getWriter();
			out.println("<font color=red>Either user name or password is wrong. Try again.</font>");
			rd.include(request, response);
		}
	}

}
